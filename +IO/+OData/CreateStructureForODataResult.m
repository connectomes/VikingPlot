function result = CreateStructureForODataResult( odata_struct, odata_locations, odata_location_links )
%CreateStructureForODataResult Convert OData result to a structure

    if(isempty(odata_locations))
        loc_result = struct('ID', [], ...
                        'ParentID', [], ...
                        'X', [], ...
                        'Y', [], ...
                        'Z', [], ...
                        'Radius', [], ...
                        'SectionX', [], ...
                        'SectionY', []);
    else
        loc_result = struct('ID', uint64(vertcat(odata_locations.ID)), ...
                        'ParentID', uint64(vertcat(odata_locations.ParentID)), ...
                        'X', vertcat(odata_locations.VolumeX), ...
                        'Y', vertcat(odata_locations.VolumeY), ...
                        'Z',       vertcat(odata_locations.Z), ...
                        'Radius',       vertcat(odata_locations.Radius), ...
                        'SectionX',       vertcat(odata_locations.X), ...
                        'SectionY',       vertcat(odata_locations.Y));
    end
    
    if(isempty(odata_location_links))
        loc_link_result = struct('A', [], 'B', []);
    else
                    
        loc_link_result = struct('A', uint64(vertcat(odata_location_links.A)), ...
                             'B', uint64(vertcat(odata_location_links.B)));
    end
    
    result = struct('ID', uint64(odata_struct.ID), ...
               'ParentID', uint64(odata_struct.ParentID), ...
               'TypeID', uint64(odata_struct.TypeID), ...
               'Label', odata_struct.Label, ...
               'LastModified', odata_struct.LastModified, ... %datetime(odata_struct.LastModified, 'InputFormat', 'yyyy-MM-dd''T''HH:mm:ss''.''SSSXXX', 'TimeZone','UTC'), ...
               'Locations', loc_result, ...
               'LocationLinks', loc_link_result);
end

